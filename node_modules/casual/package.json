{
  "name": "casual",
  "version": "1.4.3",
  "description": "Fake data generator",
  "main": "src/casual.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/boo1ean/casual.git"
  },
  "keywords": [
    "faker",
    "fake",
    "data",
    "casual",
    "fixtures",
    "testing",
    "seed",
    "random",
    "mock",
    "mocking",
    "generator"
  ],
  "author": {
    "name": "Egor Gumenyuk",
    "email": "boo1ean0807@gmail.com"
  },
  "license": "MIT",
  "dependencies": {
    "moment": "~2.5.1",
    "mersenne-twister": "~1.0.1"
  },
  "devDependencies": {
    "should": "~3.1.2",
    "mocha": "~1.17.1",
    "text-table": "~0.2.0",
    "realist": "~0.2.5"
  },
  "readme": "## Fake data generator [![Build Status](https://travis-ci.org/boo1ean/casual.png?branch=master)](https://travis-ci.org/boo1ean/casual)\n\n## Installation\n\n> npm install casual\n\n## Usage\n\n```javascript\nvar casual = require('casual');\n\n// Generate random sentence\n// You don't need function call operator here\n// because most of generators use properties mechanism\nvar sentence = casual.sentence;\n\n// Generate random city name\nvar city = casual.city;\n\n// Define custom generator\ncasual.define('point', function() {\n\treturn {\n\t\tx: Math.random(),\n\t\ty: Math.random()\n\t};\n});\n\n// Generate random point\nvar point = casual.point;\n\n// And so on..\n```\n\nCasual uses javascript properties for common generators so you don't need to use function call operator\n\n## Embedded generators\n\n```javascript\n\n// Address\n\ncasual.country          // 'United Kingdom'\ncasual.city             // 'New Ortiz chester'\ncasual.zip              // '26995'\ncasual.street           // 'Jadyn Islands'\ncasual.address          // '6390 Tremblay Pines Suite 784'\ncasual.address1         // '8417 Veda Circles'\ncasual.address2         // 'Suite 648'\ncasual.state            // 'Michigan'\ncasual.state_abbr       // 'CO'\ncasual.latitude         // 90.0610\ncasual.longitude        // 180.0778\ncasual.building_number  // 2413\n\n// Text\n\ncasual.sentence               // 'Laborum eius porro consequatur.'\ncasual.sentences(n = 3)       // 'Dolorum fuga nobis sit natus consequatur. Laboriosam sapiente. Natus quos ut.'\ncasual.title                  // 'Systematic nobis'\ncasual.text                   // 'Nemo tempore natus non accusamus eos placeat nesciunt. et fugit ut odio nisi dolore non ... (long text)'\ncasual.description            // 'Vel et rerum nostrum quia. Dolorum fuga nobis sit natus consequatur.'\ncasual.short_description      // 'Qui iste similique iusto.'\ncasual.string                 // 'saepe quia molestias voluptates et'\ncasual.word                   // 'voluptatem'\ncasual.words(n = 7)           // 'sed quis ut beatae id adipisci aut'\ncasual.array_of_words(n = 7)  // [ 'voluptas', 'atque', 'vitae', 'vel', 'dolor', 'saepe', 'ut' ]\ncasual.letter                 // 'k'\n\n// Internet\n\ncasual.ip      // '21.44.122.149'\ncasual.domain  // 'darrion.us'\ncasual.url     // 'germaine.net'\ncasual.email   // 'Josue.Hessel@claire.us'\n\n// Person\n\ncasual.name            // 'Alberto'\ncasual.username        // 'Darryl'\ncasual.first_name      // 'Derek'\ncasual.last_name       // 'Considine'\ncasual.full_name       // 'Kadin Torphy'\ncasual.password        // '(205)580-1350Schumm'\ncasual.name_prefix     // 'Miss'\ncasual.name_suffix     // 'Jr.'\ncasual.company_name    // 'Cole, Wuckert and Strosin'\ncasual.company_suffix  // 'Inc'\ncasual.catch_phrase    // 'Synchronised optimal concept'\ncasual.phone           // '380 82 790 25 92'\n\n// Numbers\n\ncasual.random                            // 0.7171590146608651 (core generator)\ncasual.integer(from = -1000, to = 1000)  // 632\ncasual.double(from = -1000, to = 1000)   // -234.12987444\ncasual.array_of_digits(n = 7)            // [ 4, 8, 3, 1, 7, 6, 6 ]\ncasual.array_of_integers(n = 7)          // [ -105, -7, -532, -596, -430, -957, -234 ]\ncasual.array_of_doubles(n = 7)           // [ -866.3755785673857, -166.62194719538093, ...]\n\n// Date\n\ncasual.unix_time                    // 659897901\ncasual.moment                       // moment.js object see http://momentjs.com/docs/\ncasual.date(format = 'YYYY-MM-DD')  // '2001-07-06' (see available formatters http://momentjs.com/docs/#/parsing/string-format/)\ncasual.time(format = 'HH:mm:ss')    // '03:08:02' (see available formatters http://momentjs.com/docs/#/parsing/string-format/)\ncasual.century                      // 'IV'\ncasual.am_pm                        // 'am'\ncasual.day_of_year                  // 323\ncasual.day_of_month                 // 9\ncasual.day_of_week                  // 4\ncasual.month_number                 // 9\ncasual.month_name                   // 'March'\ncasual.year                         // 1990\ncasual.timezone                     // 'America/Miquelon'\n\n// Payments\n\ncasual.card_type            // 'American Express'\ncasual.card_number(vendor)  // '4716506247152101' (if no vendor specified then random)\ncasual.card_exp             // '03/04'\ncasual.card_data            // { type: 'MasterCard', number: '5307558778577046', exp: '04/88', holder_name: 'Jaron Gibson' }\n\n// Misc\n\ncasual.country_code    // 'ES'\ncasual.language_code   // 'ru'\ncasual.locale          // 'hi_IN'\ncasual.mime_type       // 'audio/mpeg'\ncasual.file_extension  // 'rtf'\n\n// Colors\n\ncasual.color_name       // 'DarkOliveGreen'\ncasual.safe_color_name  // 'maroon'\ncasual.rgb_hex          // '#2e4e1f'\ncasual.rgb_array        // [ 194, 193, 166 ]\n```\n\n## Define custom generators\n\n```javascript\ncasual.define('user', function() {\n\treturn {\n\t\temail: casual.email,\n\t\tfirstname: casual.first_name,\n\t\tlastname: casual.last_name,\n\t\tpassword: casual.password\n\t};\n});\n\n// Generate object with randomly generated fields\nvar user = casual.user;\n```\n\nIf you want to pass some params to your generator:\n\n```javascript\ncasual.define('profile', function(type) {\n\treturn {\n\t\ttitle: casual.title,\n\t\tdescription: casual.description,\n\t\ttype: type || 'private'\n\t};\n});\n\n// Generate object with random data\nvar profile = casual.profile('public');\n```\n\nNOTE: if getter function has non-empty arguments list then generator should be called as function `casual.profile('public')`,\notherwise it should be accessed as property `casual.profile`.\n\n## Localization\n\nYou can get localized version of casual generator:\n\n```javascript\nvar casual = require('casual').ru_RU;\ncasual.street; // 'Бухарестская'\n```\n\nDefault locale is `en_US`.\n\nSee [src/providers/{{locale}}](https://github.com/boo1ean/casual/blob/master/locales.md) for more details about available locales and locale specific generators.\n\nIf you don't find necessary locale, please create an issue or just [add it](#contributing) :)\n\n## Helpers\n\n#### random_element\n\nGet random array element\n\n```javascript\nvar item = casual.random_element(['ball', 'clock', 'table']);\n```\n\n#### random_value\n\nExtract random object value\n\n```javascript\nvar val = casual.random_value({ a: 1, b: 3, c: 42 });\n// val will be equal 1 or 3 or 42\n```\n\n#### random_key\n\nExtract random object key\n\n```javascript\nvar val = casual.random_key({ a: 1, b: 3, c: 42 });\n// val will be equal 'a' or 'b' or 'c'\n```\n\n#### populate\n\nReplace placeholders with generators results\n\n```javascript\ncasual.populate('{{email}} {{first_name}}');\n// 'Dallin.Konopelski@yahoo.com Lyla'\n```\n\n#### populate_one_of\n\nPick random element from given array and populate it\n\n```javascript\nvar formats = ['{{first_name}}', '{{last_name}} {{city}}'];\ncasual.populate_one_of(formats);\n\n// Same as\n\ncasual.populate(casual.random_element(formats));\n```\n\n#### numerify\n\nReplace all `#` in string with digits\n\n```javascript\nvar format = '(##)-00-###-##';\ncasual.numerify(format); // '(10)-00-843-32'\n```\n\n#### define\n\n[See custom generators](#define-custom-generators)\n\n#### register_provider\n\nRegister generators provider\n\n```javascript\nvar words = ['flexible', 'great', 'ok', 'good'];\nvar doge_provider = {\n\tsuch: function() {\n\t\treturn 'such ' + casual.random_element(words);\n\t},\n\n\tdoge_phrase: function() {\n\t\treturn 'wow ' + provider.such();\n\t}\n};\n\ncasual.register_provider(doge_provider);\n\ncasual.such;        // 'such good'\ncasual.doge_phrase; // 'wow such flexible'\n```\n\n## Seeding\n\nIf you want to use a specific seed in order to get a repeatable random sequence:\n\n```javascript\ncasual.seed(123);\n```\n\nIt uses [Mersenne Twister](https://github.com/boo1ean/mersenne-twister) pseudorandom number generator in core.\n\n## Generators functions\n\nIf you want to pass generator as a callback somewhere or just hate properties you always can access generator **function** at `casual._{generator}`\n\n```javascript\n// Generate value using function\nvar title = casual._title();\n// Same as\nvar title = casual.title;\n\n// Pass generator as callback\nvar array_of = function(times, generator) {\n\tvar result = [];\n\n\tfor (var i = 0; i < times; ++i) {\n\t\tresult.push(generator());\n\t}\n\n\treturn result;\n};\n\n// Will generate array of five random timestamps\nvar array_of_timestamps = array_of(5, casual._unix_time);\n```\n\nOr you can get functional version of casual generator:\n\n```javascript\nvar casual = require('casual').functions();\n\n// Generate title\ncasual.title();\n\n// Generate timestamp\ncasual.unix_time();\n```\n\n## View providers output cli\n\nThere is a simple cli util which could be used to view/debug providers output:\n\n\t# Will render table with columns [generator_name, result] for all providers\n\tnode utils/show.js\n\n\t # Will render table with columns [generator_name, result] only for person provider\n\tnode utils/show.js person\n\n## Contributing\n\n- [Adding new locale](https://github.com/boo1ean/casual/blob/master/locales.md)\n\n# License\n\nHeavily inspired by https://github.com/fzaninotto/Faker\n\nThe MIT License (MIT)\nCopyright (c) 2014 Egor Gumenyuk <boo1ean0807@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/boo1ean/casual/issues"
  },
  "homepage": "https://github.com/boo1ean/casual",
  "_id": "casual@1.4.3",
  "dist": {
    "shasum": "f0ef56cdd3d20a2d534f7530da40f1d13e8a2c87"
  },
  "_from": "casual@",
  "_resolved": "https://registry.npmjs.org/casual/-/casual-1.4.3.tgz"
}
