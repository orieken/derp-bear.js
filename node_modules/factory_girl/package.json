{
  "name": "factory_girl",
  "version": "0.1.0",
  "codename": "black",
  "description": "port features from factory_girl rails to nodejs",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Coffa/factory_girl"
  },
  "keywords": [
    "factory",
    "seed",
    "jasmine",
    "data"
  ],
  "author": {
    "name": "MQuy90"
  },
  "license": "BSD-2-Clause",
  "bugs": {
    "url": "https://github.com/Coffa/factory_girl/issues"
  },
  "devDependencies": {
    "bower": "~1.2.2",
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-compress": "~0.5.2",
    "grunt-contrib-connect": "~0.3.0",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-copy": "~0.4.1",
    "grunt-contrib-uglify": "~0.2.4",
    "grunt-karma": "git://github.com/MQuy/grunt-karma",
    "grunt-shell": "~0.3.1",
    "shelljs": "~0.1.4",
    "karma": "~0.11",
    "karma-mocha": "~0.1.0",
    "karma-chrome-launcher": "~0.1.0",
    "karma-safari-launcher": "~0.1.0",
    "karma-firefox-launcher": "~0.1.0",
    "karma-opera-launcher": "~0.1.0",
    "karma-ie-launcher": "~0.1.1",
    "karma-ng-scenario": "~0.1.0",
    "karma-script-launcher": "~0.1.0",
    "karma-coverage": "~0.1.0",
    "karma-growl-reporter": "~0.1.1",
    "karma-junit-reporter": "https://github.com/karma-runner/karma-junit-reporter/tarball/karma-0.11",
    "chai": "~1.8.0",
    "sinon": "~1.7.3"
  },
  "readme": "# Factory Girl\n\nport features from factory_girl in rails to nodejs\n\n## Installation\n\nNode.js:\n\n    npm install 'factory_girl'\n\n## Usage\n\n### Define factory\n\n``` js\nvar FactoryGirl = require('factory_girl'); // for nodejs\n```\n\n``` js\n\nFactoryGirl.define('user', function() {\n\tthis.id = Math.random()*101|0;\n\tthis.title = 'That\\'s awesome day';\n\tthis.emotion = 'happy';\n})\n```\n\n### Using factories\n\n``` js\n\tuser = FactoryGirl.create('user'); // create instance user\n\tuser.attributes(); // => {id: 1, title: 'That\\'s awesome day', emotion: 'happy'}\n```\n\nIt's possible to override the defined attributes by passing a json:\n``` js\n\tuser = FactoryGirl.create('user', {id: 2});\n\tuser.attributes(); // => {id: 2, ....}\n\tFactoryGirl.attributesFor('user') // => {id: 1, ...}\n\tFactoryGirl.defined('user') // => true\n```\n\n### Aliases\n\n``` js\nFactoryGirl.define('user', {alias: 'doctor'}, function () {\n\t// same above\n})\n```\n\n`FactorGirl.create('user')` is equal to `FactoryGirl.create('doctor')`\n\nanother thing is you can pass to array to alias  `{alias: ['doctor', 'patient']`\n\n### Inheritance\n\n``` js\nFactorlGirl.define('doctor', {inherit: 'user'}, function() {\n\tthis.id = 2;\n\tthis.label = 'Dr';\n})\n\nvar doctor = Factory.create('doctor');\ndoctor.attributes() // => {id: 2, title: 'That\\'s awesome day', emotion: 'happy', label: 'Dr'}\n```\n\n### Association\n``` js\nFactoryGirl.define('profile', function() {\n\tthis.id = 2;\n\tthis.label = 'Dr';\n\tthis.belongTo('user');\n})\n\nFactoryGirl.define('place', function() {\n\tthis.id = 2;\n\tthis.label = 'New York';\n\tthis.hasOne('user');\n})\n\nvar profile = FactoryGirl.create('profile');\nprofile.attributes() // => {label: 'Dr'};\nprofile.toJSON() // => {id: 2, label: 'Dr', user_id: 1, user: {id: 1, title: 'That\\'s awesome day', emotion: 'happy'}}\n\nvar place = FactoryGirl.create('place');\nprofile.toJSON() // => {id: 2, label: 'New York', user: {id: 1, place_id: 2, ...}}\n```\n\n### Create Multi Object\n``` js\nFactoryGirl.createLists('user') => [{id: 1, ...}, {id: 23, ....}]\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/Coffa/factory_girl",
  "_id": "factory_girl@0.1.0",
  "dist": {
    "shasum": "552c81921650c9c6c3c8efd21d6393b2f9de4002"
  },
  "_from": "factory_girl@",
  "_resolved": "https://registry.npmjs.org/factory_girl/-/factory_girl-0.1.0.tgz"
}
